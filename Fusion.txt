Fusion

La procédure fusion se charge d'appeler deux fonctions qui diffèrent selon le mode de fusion ou la direction.

	Il est à noter que cette fonction se charge de modifier, en sus des tuiles elles-mêmes, le score et le nombre de cases vides, le tout grâce à de l'adressage indirect, mais uniquement lorsque l'on doit réellement jouer. La distinciton se fait lors de l'appel à la fonction, par le booléen doitJouer. Si celui-ci vaut "faux", le plateau ne sera pas réellement modifié mais simulé en vue d'aider le joueur à faire le meilleur choix.
Par ailleurs, chaque fonction de fusion renvoie un booléen. Idéalement, ceui-ci vaudrait "faux" par défaut et "vrai" si la moindre transformation altérait le plateau. Il servirait à vérifier si appliquer la fonction de fusion changerait la plateau de quelque manière que ce soit. A terme, cette condition serait utile dans d'autres fonctions, notamment le main pour générer une nouvelle tuile uniquement quand il le faut. Malheureusement, nous n'avons pas réussi à implémenter cette fonctionnalité.

	D'un autre côté, la fusion totale est une fonction bien plus concise. Il s'agit simplement de répeter une fusion classique autant de fois qu'il y a de cases.
Il est 
De même que pour la fonction main, savoir si le plateau serait modifié nous serait d'une grande utilité: il suffirait de répéter une fusion classique tant que cette même fusion classique modifie le plateau. La fonxtion correspondante serait la suivante
A. Initialiser un boolén à "faux"
B. Faire
	1) Fusion classique
	2) Le booléen prend la valeur renvoyée par un appel factice à fusion classique
   Tant que le booléen est à "vrai"

Finalement, la solution pour laquelle nous avons opté nous permet d'opérer les deux types de fusion. La seconde solution était celle que nou envisagions initialement, mais que nous n'avons maleheureusement pas réussi à implémenter.
